grepl(tickers[1], "III")
grepl("I", tickers[1])
grepl("., tickers[1])
grepl(".", tickers[1])
grepl("\.", tickers[1])
grepl(".", tickers[1])
grepl(".", tickers[2])
grepl("\\.", tickers[2])
grepl("\\.", tickers[12])
grepl("\\.", tickers)
tickers[grepl("\\.", tickers),]
tickers[grepl("\\.", tickers)]
tickers[!grepl("\\.", tickers)]
tickers <- tickers[!grepl("\\.", tickers)]
quantmod::getSymbols(tickers[12], from = "2014-06-01", to = "2017-06-01")
tickers_all <- getSymbols()
tickers_all <- stockSymbols()
tickers_all
tickers_all$Symbol
tickers %in% tickers_all$Symbol
tickers[tickers %in% tickers_all$Symbol]
tickers_FTSE100 <- htmltab("https://en.wikipedia.org/wiki/FTSE_100_Index", 3)$Ticker
tickers_all <- stockSymbols()
tickers <- tickers_FTSE100[tickers_FTSE100 %in% tickers_all$Symbol]
tickers
get.stock <- function(s) {
s <- try(Cl(getSymbols(s, auto.assign=FALSE)), silent=T)
if (class(s)=="xts") return(s)
return (NULL)
}
result <- do.call(cbind,lapply(tickers[1:3], get.stock))
result
s <- try(Cl(getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-31")), silent=T)
s
tickers[1]
s <- try(Cl(getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-31")), silent=T)
s
getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-31"))
getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-31")
tickers[1]
getSymbols("III", auto.assign=FALSE, from = "2014-01-01", to = "2017-06-31")
getSymbols("III", auto.assign=FALSE)
getSymbols("III", auto.assign=FALSE, from = "2014-01-01", to = "2017-06-31")
getSymbols("III", auto.assign=FALSE, to = "2017-06-31")
getSymbols("III", auto.assign=FALSE, to = 2017-06-31)
getSymbols("III", auto.assign=FALSE, to = "2017-06-30")
s <- try(Cl(getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30")), silent=T)
s
head(s)
s <- try(getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
s
head(s)
nn <- unlist(strsplit(names(s), '[.]'))
nn
2 %/% 2
2 %/% 1
3 %/% 2
4 %/% 2
5 %/% 2
nn <- nn[nn==c(2,4,6,8,10,12)]
nn
nn <- unlist(strsplit(names(s), '[.]'))
nn[nn==c(2,4,6,8,10,12)]
nn
nn[c(2,4,6,8,10,12)]
s
names(s) <- nn
names(s)
nn
nn <- nn[c(2,4,6,8,10,12)]
names(s) <- nn
names(s)
get.stock <- function(ticker) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
if (class(dat)=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#add company name
dat %>%
mutate(company = ticker)
return(dat)
}
return (NULL)
}
get.stock("AAPL")
library(dplyr)
get.stock("AAPL")
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
dat
dat <- try(getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
dat
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
head(dat)
dat %>%
mutate(company = ticker)
dat %>%
mutate(company = tickers[1])
head(dat)
df <- data.frame(dat)
df$date = as.Date(rownames(df))
head(df)
df %>%
mutate(company = ticker)
df %>%
mutate(company = tickers[1])
getStock <- function(ticker) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
if (class(dat)=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#convert to df
df <- data.frame(dat)
df$date = as.Date(rownames(df))
#add company name
df %>%
mutate(company = ticker)
return(df)
}
return (NULL)
}
getStock("AAPL")
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
class(dat)
dat
dat <- try(getSymbols(tickers[1], auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
class(dat)
getStock <- function(ticker) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
if(class(dat)[1]=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#convert to df
df <- data.frame(dat)
df$date = as.Date(rownames(df))
#add company name
df %>%
mutate(company = ticker)
return(df)
}
return (NULL)
}
getStock("AAPL")
getStock("AAPLA")
result <- do.call(rbind, lapply(tickers[1:3], getStock))
result
getStock <- function(ticker) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = "2014-01-01", to = "2017-06-30"), silent=T)
if(class(dat)[1]=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#convert to df
df <- data.frame(dat)
df$date = as.Date(rownames(df))
#add company name
df <- df %>%
mutate(company = ticker)
return(df)
}
return (NULL)
}
result <- do.call(rbind, lapply(tickers[1:3], getStock))
result
result$company
unique(result$company)
getStock <- function(ticker, start_date, end_date) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = start_date, to = end_date), silent=T)
if(class(dat)[1]=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#convert to df
df <- data.frame(dat)
df$date = as.Date(rownames(df))
#add company name
df <- df %>%
mutate(company = ticker)
return(df)
}
return (NULL)
}
getStock("AAPLA", "2015-01-01", "2017-06-30")
getStock("AAPL", "2015-01-01", "2017-06-30")
result <- do.call(rbind, lapply(tickers[1:3], getStock(start_date = "2015-01-01", end_date = "2017-06-30")))
getStock <- function(ticker, start_date, end_date) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = start_date, to = end_date), silent=T)
if(class(dat)[1]=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#convert to df
df <- data.frame(dat)
df$date = as.Date(rownames(df))
#add company name
df <- df %>%
mutate(company = ticker)
return(df)
}
return (NULL)
}
result <- do.call(rbind, lapply(tickers[1:3], getStock(start_date = "2015-01-01", end_date = "2017-06-30")))
result <- do.call(rbind, lapply(tickers[1:3], function(x) {
getStock(x, start_date = "2015-01-01", end_date = "2017-06-30"))
})
result <- do.call(rbind, lapply(tickers[1:3], function(x) {
getStock(x, start_date = "2015-01-01", end_date = "2017-06-30")
})
)
result
unique(result$company)
result <- do.call(rbind, lapply(tickers, function(x) {
getStock(x, start_date = "2015-01-01", end_date = "2017-06-30")
})
)
subset(result, company=="SKY")
write.csv(result, "quantmod_stocks.csv")
nrow(result)
devtools::install_github("cran/quantstrat")
devtools::install_github("fandres70/quantstrat")
install.packages("FinancialInstrument", repos="http://R-Forge.R-project.org")
install.packages("blotter", repos="http://R-Forge.R-project.org")
devtools::install_version("blotter", "3.3.3")
install.packages("FinancialInstrument", dependencies=TRUE, repos='http://cran.rstudio.com/'))
install.packages("FinancialInstrument", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("blotter", dependencies=TRUE, repos='http://cran.rstudio.com/')
install_github("braverock/blotter")
devtools::install_github("braverock/blotter")
library(devtools)
install_github("joshuaulrich/xts")
detach("package:quantmod", unload=TRUE)
install_github("joshuaulrich/xts")
install_github("joshuaulrich/xts", force=TRUE)
devtools::install_github("braverock/blotter")
devtools::install_github("fandres70/quantstrat")
install_github("braverock/quantstrat")
library(devtools)
install_github("braverock/quantstrat")
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
d <- read.csv("~/Desktop/VLDB/quantmod_stocks.csv")
d[-1,]
d <- d[-1,]
names(d)
d <- read.csv("~/Desktop/VLDB/quantmod_stocks.csv")
head(d[1])
head(d[1,])
head(d[,1])
d[,1]
d[,-1]
d <- d[,-1]
names(d)
d[,c(7, 1:6, 8)]
d[,c(7, 8, 1:6)]
d <- d[,c(7, 1:6, 8)]
write.csv(d, "~/Desktop/VLDB/quantmod_stocks.csv")
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
write.csv(d, "~/Desktop/VLDB/quantmod_stocks.csv", row.names = FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
rm(d)
d <- read.csv("~/Desktop/VLDB/quantmod_stocks.csv")
head(d)
d$id <- 1:nrow(d)
head(d[,c(8, 7, 1:6)])
head(d)
head(d[,c(9, 1:7)])
d <- d[,c(9, 1:7)]
write.csv(d, "~/Desktop/VLDB/quantmod_stocks.csv", row.names = FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
write.csv(d, "~/Desktop/VLDB/quantmod_stocks.csv", quote = FALSE, row.names = FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
d <- read.csv("~/Desktop/VLDB/quantmod_stocks.csv")
head(d)
results
result
result <- do.call(rbind, lapply(tickers, function(x) {
getStock(x, start_date = "2014-07-01", end_date = "2017-07-01")
})
)
tickers_FTSE100 <- htmltab::htmltab("https://en.wikipedia.org/wiki/FTSE_100_Index", 3)$Ticker
tickers_all <- stockSymbols()
library(quantmod)
tickers_all <- stockSymbols()
tickers <- tickers_FTSE100[tickers_FTSE100 %in% tickers_all$Symbol]
tickers
getStock <- function(ticker, start_date, end_date) {
dat <- try(getSymbols(ticker, auto.assign=FALSE, from = start_date, to = end_date), silent=T)
if(class(dat)[1]=="xts") {
#rename columns
nn <- unlist(strsplit(names(dat), '[.]'))
nn <- nn[c(2,4,6,8,10,12)]
names(dat) <- nn
#convert to df
df <- data.frame(dat)
df$date = as.Date(rownames(df))
#add company name
df <- df %>%
mutate(company = ticker)
return(df)
}
return (NULL)
}
result <- do.call(rbind, lapply(tickers, function(x) {
getStock(x, start_date = "2014-07-01", end_date = "2017-07-01")
})
)
library(dplyr)
result <- do.call(rbind, lapply(tickers, function(x) {
getStock(x, start_date = "2014-07-01", end_date = "2017-07-01")
})
)
head(result)
d$id <- 1:nrow(d)
d[,c(9, 7, 8, 1:6)]
d <- result
d[,c(9, 7, 8, 1:6)]
names(d)
d$id <- 1:nrow(d)
d[,c(9, 7, 8, 1:6)]
d <- d[,c(9, 7, 8, 1:6)]
head(d)
write.csv(d, "quantmod_stocks.csv", quote=FALSE, row.names=FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
head(d)
write.csv(d, "quantmod_stocks.csv", quote=FALSE, row.names=FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
write.csv(d, "quantmod_stocks.csv", row.names=FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
head(d)
write.csv(d, "~/Desktop/VLDB/quantmod_stocks.csv", quote=FALSE, row.names=FALSE)
head(read.csv("~/Desktop/VLDB/quantmod_stocks.csv"))
d[2776,]
d[2775:2777,]
install.packages("RPostgreSQL")
rm(list=ls())
library(RPostgreSQL)
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres",
host="localhost", port=5432, dbname="staging")
con = dbConnect(pg, user="postgres", password="postgres",
host="localhost", port=5432, dbname="finance")
dbWriteTable(con, 'fund_price', fund_price, row.names=FALSE)
dbWriteTable(con, 'staging', staging, row.names=FALSE)
con
summary(con)
con = dbConnect(pg, user="postgres", password="postgres",
host="localhost", port=5432, dbname="mydb")
dbWriteTable(con, 'staging', staging, row.names=FALSE)
dbWriteTable(con, 'finance', staging, row.names=FALSE)
dbWriteTable(con, 'finance', finance, row.names=FALSE)
dbWriteTable(con, 'finance', row_counts, row.names=FALSE)
dbWriteTable(con, 'finance', row_count, row.names=FALSE)
summary(dtab)
library(purrr)
map_dbl(., "r.squared")
mtcars ->,;
split(., .$cyl) ->,;
map(., ~lm(mpg ~ wt, data = .)) ->,;
map(., summary)
mtcars ->,;
split(., .$cyl)
mtcars ->.;
split(., .$cyl) ->.;
map(., ~lm(mpg ~ wt, data = .)) ->.;
map(., summary) ->.;
map_dbl(., "r.squared")
map_dbl(., "r.squard")
mtcars ->.;
split(., .$cyl) ->.;
map(., ~lm(mpg ~ wt, data = .)) ->.;
map(., summary) ->.;
map_dbl(., "r.squard")
mtcars ->.;
split(., .$cyl) ->.;
map(., ~lm(mpg ~ wtg, data = .)) ->.;
map(., summary) ->.;
map_dbl(., "r.squared")
mydata <- data.frame(rnorm(10), rnorm(10), rnorm(10), rnorm(10), rnorm(10))
mydata
a <- rnorm(10)
b <- seq(1:10)
a
b
Map(function(x,y) y*b, a, b)
Map(function(x,y) y*x, a, b)
?Map
Sys.Date
Sys.Date()
rnorm(1,10)
rnorm(1,10, 10)
?rnorm
rnorm(10, 10)
data.frame(y = c(rnorm(10, 10), rnorm(10, 20), rnorm(10, 30))
)
data.frame(x = rep(1:3, by = 10), y = c(rnorm(10, 10), rnorm(10, 20), rnorm(10, 30)))
data.frame(x = rep(1:3, each = 10), y = c(rnorm(10, 10), rnorm(10, 20), rnorm(10, 30)))
data.frame(x = rep(1:3, each = 10), y = c(rnorm(10, 10), rnorm(10, 20), rnorm(10, 30)))
dat <- data.frame(x = rep(1:3, each = 10), y = c(rnorm(10, 10), rnorm(10, 20), rnorm(10, 30)))
dat
mydf <- data.frame(x = rep(1:3, each = 10), y = c(rnorm(10, 10), rnorm(10, 20), rnorm(10, 30)))
rm(dat)
mydf %>% group_by(x) %>% summarise(mean)
library(dplyr)
mydf %>% group_by(x) %>% summarise(mean)
mydf %>% group_by(x) %>% summarise(mean(y))
mydf %>% summarise(mean(y))
mydf %>% group_by(x) %>% summarise(mu = mean(y)) %>% summarise(mean(mu))
mean(mydf$y)
setwd("/home/joe/Dropbox/github/quantdb/")
source("./R/getSymbols2.R")
library(quantmod)
current_date <- Sys.Date()
current_date <- Sys.Date()
latestDates <- read.csv("./loading/latest_dates.csv"), header=F)
latestDates <- read.csv("./loading/latest_dates.csv", header=F)
tickers <- as.character(read.table("my_symbols.txt")$V1)
tickers[tickers %in% latestDates[,1]]
tickers[! tickers %in% latestDates[,1]]
start_date <- "2017-07-01"
tickers_update <- tickers[tickers %in% latestDates[,1]]
tickers_new <- tickers[! tickers %in% latestDates[,1]]
getSymbolsDF(tickers_new, from = start_date, to = current_date)
getSymbolsDF(tickers_update, from = latestDates[,2], to = current_date)
latestDates[,2]
latestDates <- read.csv("./loading/latest_dates.csv")
latestDates
latestDates[,2]
subset(latestDates, last_date %in% current_date)
subset(latestDates, ! last_date %in% current_date)
subset(latestDates, last_date != current_date)
subset(latestDates, last_date == current_date)
current_date
last_dates
latestDates$last_date
latestDates$last_date == current_date
class*latestDates$last_date)
class(latestDates$last_date)
as.Date(latestDates$last_date)
as.Date(latestDates$last_date) == current_date
current_date
as.Date(latestDates[,2])+1
as.Date(latestDates[,2])
getSymbolsDF(tickers_update, from = as.Date(latestDates[,2])+1, to = current_date)
tickers_update
getSymbols(tickers[1], from = from[x], to = to, auto.assign = F)
getSymbolsDF(tickers_update[1], from = (as.Date(latestDates[,2])+1)[1], to = current_date)
lubridate::day(current_date)
lubridate::weekdays(current_date)
lubridate::wday(current_date)
lubridate::wday(current_date, label=TRUE)
d <- getSymbols("AAPL", '2000-01-01', current_date)
d <- getSymbols("AAPL", from = '2000-01-01', to = current_date)
d
d <- getSymbols("AAPL", from = '2000-01-01', to = current_date, auto.assign = F)
d
index(d)
wday(index(d), label=T)
lubridate::wday(index(d), label=T)
hist(lubridate::wday(index(d), label=T))
hist(lubridate::wday(index(d)))
hist(lubridate::wday(index(d)), 10)
lubridate::wday(index(d), label=T)
lubridate::wday(index(d))
unique(lubridate::wday(index(d)))
head(d)
dd %>%
index()
d %>%
index()
library(dplyr)
d %>%
index()
d %>%
index() %>% max()
if (d %>% index() %>% max() > current_date) print(update)
if (d %>% index() %>% max() > current_date) print("update")
if (d %>% index() %>% max() < current_date) print("update")
strftime(current_date,'%A')
current_date - 2
if(strftime(current_date,'%A') == "Sunday") lastMarketDate <- current_date - 2
if(strftime(current_date,'%A') == "Saturday") lastMarketDate <- current_date - 1
lastMarketDate
head(latestDates)
latestDates <- read.csv("./loading/latest_dates.csv")
head(latestDates)
subset(latestDates, last_date < lastMarketDate)
subset(latestDates, last_date < "2017-07-16")
subset(latestDates, last_date <= "2017-07-16")
subset(latestDates, last_date != "2017-07-16")
subset(latestDates, last_date != as.Date("2017-07-16"))
subset(latestDates, last_date < as.Date("2017-07-16"))
class(lastMarketDate)
lastMarketDate
subset(latestDates, last_date == lastMarketDate)
subset(latestDates, as.Date(last_date) == lastMarketDate)
subset(latestDates, as.Date(last_date) < lastMarketDate)
subset(latestDates, as.Date(last_date) <= lastMarketDate)
latestDates <- subset(latestDates, as.Date(last_date) < lastMarketDate)
latestDates
getSymbolsDF(tickers_update, from = as.Date(latestDates[,2])+1, to = current_date)
if(latestDates)
if(nrow(latestDates) > 1) print("TRUE")
if(nrow(latestDates) > 1) print("TRUE") else print("FALSE")
